chapter 2

2.1

for (var i = "#"; i.length < 8; i += "#" ) {
	console.log(i)
}
//
#
##
###
####
#####
######
#######
//


2.2

for (var i = 1; i < 100; i += 1){
	if (!(i % 3) ) {
		console.log("fizz")
	}if(!(i % 5)){
		console.log("buzz")
	}else{
		console.log(i)}
}
// 自己瞎写的 但结果正确 正确答案：
// for(let n = 1; n <= 100; n++){
// 	let output = "";
// 	if (n % 3 == 0) output += "fizz";
// 	if (n % 5 == 0) output += "buzz";
// 	console.log(output || n)
// }

2.3

for (let counter = 0; counter < 9; counter ++){
	if (counter % 2 == 0){
		console.log(" " + "#" + " " + "#" + " " + "#" + " " + "#")

	}else{
		console.log("#" + " " +"#" + " " +"#" + " " +"#" + " " )
	}
}
//方法比较笨， 结果正确 正确答案 
//let size = 8;

// let board = "";

// for(let y = 0; y < size; y++){
// 	for(let x = 0; x < size; x++){
// 		if((x + y) % 2 == 0){
// 			board += " ";
// 		}else{
// 			board += "#";
// 		}
// 	}
// 	board += "\n"
// }

// console.log(board)

--------------------------------------
chapter 3

3.1

function min(a, b) {
  if (a < b) return a;
  else return b;
}
//简化代码， 如果结果只有一个字母的话，可以省略括号


3.2

function isEven(n){
    if(a ==  0) return true;
    else if(a == 1) return false;
    else if(a < 0) return isEven(-n);
    else return isEven(n - 2);
}


3.3


function countChar(string, ch){
	let result = 0;
	for(let i = 0; i < string.length; i ++){
		if(string[i] == ch){
			result += 1;
		}
	}
		return result;
}
//注意for循环写法，括号内三个；后{}




// 		}









------------------------------------------------
chapter 4

4.1

function range(start, end, step = start < end ? 1 : -1){
	let result = [];
	
	if (step > 0){
		for(let i = start; i <= end; i += step) result.push(i);}
	else{
		for(let i = start; i >= end; i += step) result.push(i);}
	return result
	}
	
	
function sum(array){
	let total = 0;
	for(i of array){
		total += i}
	return total;}
	
	
	
	
4.2

function reverseArray(array){
	let result = [];
	
	for(i = array.length - 1; i >= 0; i --){
		result.push(array[i]);}
	return result;}
		
????????
function reverseArrayInPlace(array){
	for(let i = 0; i < Math.floor(array.length / 2); i ++){
		let old = array[i];
		array[i] = array[array.length - 1 - i];}
		return array};
		
